def group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

ext.kotlin = group { implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0' }
ext.picasso = group { implementation 'com.squareup.picasso:picasso:2.71828' }

ext.androidAndGoogle = group {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha01'
}

ext.dagger = group {
    kapt deps.daggerCompiler
    kapt deps.daggerProcessor
    implementation deps.dagger
    implementation deps.daggerAndroid
    implementation deps.daggerAndroidSup
}

ext.androidXLifecycleArchitecture = group {
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.paging:paging-runtime:2.1.0-beta01'
    implementation 'android.arch.paging:rxjava2:1.0.1'
}

ext.retrofitAndOkHttp = group {
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
}

ext.rxJava = group {
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
}

ext.daggerLocalTestDependencies = group {
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    testImplementation 'javax.inject:javax.inject:1'
    testImplementation "com.google.dagger:dagger:$daggerVersion"
    testImplementation "com.google.dagger:dagger-android:$daggerVersion"
    testImplementation "com.google.dagger:dagger-android-support:$daggerVersion"
}

ext.daggerAndroidTestDependencies = group {
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    androidTestImplementation 'javax.inject:javax.inject:1'
    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger-android:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger-android-support:$daggerVersion"
}


ext.localTestDependencies = group {
    testImplementation 'org.mockito:mockito-inline:2.10.0'
    testImplementation 'org.assertj:assertj-core:2.9.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.1.1'
    testImplementation "org.robolectric:robolectric:4.0.1"

    /*AndroidX*/testImplementation "androidx.test.ext:junit:1.0.0"
    /*AndroidX*/testImplementation 'androidx.arch.core:core-testing:2.0.0'
    /*AndroidX*/testImplementation 'androidx.test:rules:1.1.0'
    /*AndroidX*/testImplementation 'androidx.test:runner:1.1.0'
    /*AndroidX*/testImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    /*AndroidX*/testImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
}

ext.androidTestDependencies = group {
/*
    testImplementation 'org.mockito:mockito-inline:2.10.0'
    testImplementation 'org.assertj:assertj-core:2.9.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.1.1'
    testImplementation "org.robolectric:robolectric:4.0.1"
*/

    /*AndroidX*/androidTestImplementation "androidx.test.ext:junit:1.0.0"
    /*AndroidX*/androidTestImplementation 'androidx.arch.core:core-testing:2.0.0'
//    /*AndroidX*/testImplementation 'androidx.test:rules:1.1.0'
    /*AndroidX*/androidTestImplementation 'androidx.test:runner:1.1.0'
    /*AndroidX*/androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    /*AndroidX*/androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
}


